#!/bin/bash
# TURN/STUN Server Installation and Configuration
# Installs and configures coturn for Nextcloud Talk video/audio calls

source /root/system-setup/config.sh

if [ "$ENABLE_TURN_SERVER" != "true" ]; then
  log_and_console "=== TURN/STUN SERVER ==="
  log_and_console "TURN server installation: DISABLED"
  log_and_console ""
  exit 0
fi

log_and_console "=== TURN/STUN SERVER INSTALLATION ==="
log_and_console "Installing coturn TURN/STUN server for Talk video/audio calls..."

# Install coturn
log_and_console "Installing coturn package..."
export DEBIAN_FRONTEND=noninteractive
apt-get install -y coturn | tee -a "$LOG_FILE"
log_and_console "✓ coturn installed"

# Generate TURN secret
log_and_console "Generating TURN authentication secret..."
TURN_SECRET=$(openssl rand -hex 32)
echo "TURN_SECRET=$TURN_SECRET" >> /root/system-setup/.passwords
chmod 600 /root/system-setup/.passwords
log_and_console "✓ TURN secret generated and saved"

# Get the SSL certificate paths
CERT_PATH="/etc/letsencrypt/live/$DOMAIN/fullchain.pem"
KEY_PATH="/etc/letsencrypt/live/$DOMAIN/privkey.pem"

# Configure coturn
log_and_console "Configuring coturn..."
cat > /etc/turnserver.conf << EOF
# Coturn TURN/STUN server configuration for Nextcloud Talk
# Generated by ubuntu-bitninja-nextcloud-cloud-config

# Listening ports
listening-port=$TURN_PORT
tls-listening-port=$TURNS_PORT

# Listening IPs
listening-ip=$SERVER_IP
EOF

# Add IPv6 if enabled
if [ "$DISABLE_IPV6" != "true" ] && [ -n "$SERVER_IPV6" ]; then
cat >> /etc/turnserver.conf << EOF
listening-ip=$SERVER_IPV6
EOF
fi

cat >> /etc/turnserver.conf << EOF

# External IP (for NAT traversal)
external-ip=$SERVER_IP

# Relay IP
relay-ip=$SERVER_IP

# Realm (your domain)
realm=$DOMAIN
server-name=$DOMAIN

# Authentication
use-auth-secret
static-auth-secret=$TURN_SECRET

# SSL/TLS certificates
cert=$CERT_PATH
pkey=$KEY_PATH

# Security settings
fingerprint
lt-cred-mech

# Disable UDP relay endpoints (use TCP for better firewall compatibility)
# Comment out the next line if you want UDP relay
# no-udp-relay

# Logging
verbose

# Performance tuning
max-bps=1000000
bps-capacity=0
total-quota=100
stale-nonce=600

# Deny access to private IP ranges (security)
denied-peer-ip=10.0.0.0-10.255.255.255
denied-peer-ip=172.16.0.0-172.31.255.255
denied-peer-ip=192.168.0.0-192.168.255.255
denied-peer-ip=127.0.0.0-127.255.255.255

# Allow loopback for testing
# no-loopback-peers

# Mobility support
mobility

# CLI access (for monitoring)
cli-password=$TURN_SECRET
cli-ip=127.0.0.1
cli-port=5766

# Process management
pidfile=/var/run/turnserver.pid
EOF

# Set permissions for turnserver user to read let's Encrypt certificate files.
setfacl -dR -m u:turnserver:rx /etc/letsencrypt/{live,archive}/$DOMAIN
setfacl -R -m u:turnserver:rx /etc/letsencrypt/{live,archive}/$DOMAIN

log_and_console "✓ coturn configured"

# Enable coturn service
log_and_console "Enabling coturn service..."
sed -i 's/#TURNSERVER_ENABLED=1/TURNSERVER_ENABLED=1/' /etc/default/coturn
systemctl enable coturn
log_and_console "✓ coturn service enabled"

# Configure firewall for TURN/STUN
log_and_console "Configuring firewall for TURN/STUN..."

# Allow TURN ports
ufw allow proto tcp from any to "$SERVER_IP" port "$TURN_PORT" comment 'TURN TCP'
ufw allow proto udp from any to "$SERVER_IP" port "$TURN_PORT" comment 'TURN UDP'
ufw allow proto tcp from any to "$SERVER_IP" port "$TURNS_PORT" comment 'TURNS TLS'

# Add IPv6 rules if enabled
if [ "$DISABLE_IPV6" != "true" ] && [ -n "$SERVER_IPV6" ]; then
  ufw allow proto tcp from any to "$SERVER_IPV6" port "$TURN_PORT" comment 'TURN TCP (IPv6)'
  ufw allow proto udp from any to "$SERVER_IPV6" port "$TURN_PORT" comment 'TURN UDP (IPv6)'
  ufw allow proto tcp from any to "$SERVER_IPV6" port "$TURNS_PORT" comment 'TURNS TLS (IPv6)'
fi

ufw reload
log_and_console "✓ Firewall configured for TURN/STUN"

# Start coturn
log_and_console "Starting coturn service..."
systemctl start coturn
sleep 2

# Verify coturn is running
if systemctl is-active --quiet coturn; then
  log_and_console "✓ coturn service started successfully"
else
  log_and_console "⚠ WARNING: coturn service failed to start"
  log_and_console "  Check logs: journalctl -u coturn -n 50"
fi

# Configure Nextcloud Talk to use TURN server
log_and_console "Configuring Nextcloud Talk to use TURN server..."

# Wait for Nextcloud to be ready
sleep 2

# Add TURN server configuration
sudo -u www-data php "$NEXTCLOUD_WEB_DIR/occ" talk:turn:add "turn:$DOMAIN:$TURN_PORT" udp "$TURN_SECRET" || log_and_console "  ⚠ Failed to add TURN UDP"
sudo -u www-data php "$NEXTCLOUD_WEB_DIR/occ" talk:turn:add "turn:$DOMAIN:$TURN_PORT" tcp "$TURN_SECRET" || log_and_console "  ⚠ Failed to add TURN TCP"
sudo -u www-data php "$NEXTCLOUD_WEB_DIR/occ" talk:turn:add "turns:$DOMAIN:$TURNS_PORT" tcp "$TURN_SECRET" || log_and_console "  ⚠ Failed to add TURNS"

# Add STUN server
sudo -u www-data php "$NEXTCLOUD_WEB_DIR/occ" talk:stun:add "$DOMAIN:$TURN_PORT" || log_and_console "  ⚠ Failed to add STUN"

log_and_console "✓ Nextcloud Talk configured to use TURN/STUN server"

# Create logrotate configuration for turnserver
log_and_console "Configuring log rotation..."
cat > /etc/logrotate.d/turnserver << 'EOF'
/var/log/turnserver/* {
    daily
    rotate 7
    compress
    delaycompress
    missingok
    notifempty
    create 0640 turnserver turnserver
    sharedscripts
    postrotate
        systemctl reload coturn > /dev/null 2>&1 || true
    endscript
}
EOF
log_and_console "✓ Log rotation configured"

# Configure fail2ban for TURN server
log_and_console "Configuring fail2ban protection for TURN server..."

# Download fail2ban filter for coturn
log_and_console "Downloading fail2ban filter configuration..."
wget --tries=3 --timeout=30 -O /etc/fail2ban/filter.d/coturn.conf \
  https://raw.githubusercontent.com/$GITHUB_REPO/$GITHUB_BRANCH/conf/fail2ban-coturn-filter.conf || { 
  log_and_console "ERROR: Failed to download fail2ban-coturn-filter.conf"; 
  exit 1; 
}

# Download fail2ban jail configuration for coturn
log_and_console "Downloading fail2ban jail configuration..."
wget --tries=3 --timeout=30 -O /etc/fail2ban/jail.d/coturn.conf \
  https://raw.githubusercontent.com/$GITHUB_REPO/$GITHUB_BRANCH/conf/fail2ban-coturn.conf || { 
  log_and_console "ERROR: Failed to download fail2ban-coturn.conf"; 
  exit 1; 
}

# Update ports in the config file if they're non-standard
if [ "$TURN_PORT" != "3478" ] || [ "$TURNS_PORT" != "5349" ]; then
  sed -i "s/port = 3478,5349/port = $TURN_PORT,$TURNS_PORT/" /etc/fail2ban/jail.d/coturn.conf
fi

# Restart fail2ban to apply new rules
systemctl restart fail2ban
log_and_console "✓ fail2ban protection configured for TURN server"
log_and_console "  Max retries: 5 attempts in 10 minutes"
log_and_console "  Ban time: 1 hour"
log_and_console "  Protected ports: $TURN_PORT, $TURNS_PORT"

# Display TURN server information
log_and_console ""
log_and_console "=== TURN/STUN SERVER INFORMATION ==="
log_and_console "TURN Server: $DOMAIN"
log_and_console "TURN Port (UDP/TCP): $TURN_PORT"
log_and_console "TURNS Port (TLS): $TURNS_PORT"
log_and_console "Authentication: Shared secret"
log_and_console "Secret saved in: /root/system-setup/.passwords"
log_and_console ""
log_and_console "✓ TURN/STUN server installation complete"
log_and_console ""
log_and_console "Video and audio calls in Talk should now work reliably!"
log_and_console "Users behind firewalls and NAT will be able to connect."
log_and_console ""

